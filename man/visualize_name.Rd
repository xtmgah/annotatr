% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/visualize.R
\name{visualize_name}
\alias{visualize_name}
\title{Visualize scores over annotations}
\usage{
visualize_name(summarized_names, annotation_order, data_order, fill = FALSE)
}
\arguments{
\item{summarized_names}{The \code{tbl_df} result of \code{summarize_name()}.}

\item{annotation_order}{A character vector which doubles as the subset of annotations desired for visualization as well as the ordering.}

\item{data_order}{A character vector which doubles as the subset of data_name's desired for visualization as well as the ordering.}

\item{fill}{A boolean indicating whether \code{ggplot::geom_bar(..., position='fill')} or not. When TRUE, the barplot is normalized across the categories on the x-axis, and when FALSE, the barplot reflects counts of the categories on the x-axis. Default is FALSE.}
}
\value{
A \code{ggplot} object which can be viewed by calling it, or saved with \code{ggplot2::ggsave}.
}
\description{
Given a \code{dplyr::tbl_df} of name aggregated annotations (from \code{summarize_name()}), visualize the the distribution of \code{annot_type} in \code{data_name}.
}
\examples{
# An example of differentially methylated regions classified as DM up, DM down, or no DM
bed = system.file('extdata', 'IDH2mut_v_NBM_names_scores_chr9.txt.gz', package = 'annotatr')
annotations = c('basic_genes','cpgs')

d = read_bed(filename = bed, genome = 'hg19', stranded = FALSE, use.score = TRUE)

i = annotate_regions(
  regions = d,
  annotations = annotations,
  genome = 'hg19',
  ignore.strand = TRUE,
  use.score = TRUE)

s = summarize_name(i)

cpgs_order = c(
  'hg19_cpg_islands',
  'hg19_cpg_shores',
  'hg19_cpg_shelves',
  'hg19_cpg_inter')
data_order = c(
  'DMup',
  'DMdown')
v_cpgs_counts = visualize_name(s, cpgs_order, data_order, fill=FALSE)
v_cpgs_proportions = visualize_name(s, cpgs_order, data_order, fill=TRUE)

genes_order = c(
  'hg19_knownGenes_1to5kb',
  'hg19_knownGenes_promoters',
  'hg19_knownGenes_5UTRs',
  'hg19_knownGenes_exons',
  'hg19_knownGenes_introns',
  'hg19_knownGenes_3UTRs')
data_order = c(
  'DMup',
  'DMdown')
v_genes_counts = visualize_name(s, genes_order, data_order, fill=FALSE)
v_genes_proportions = visualize_name(s, genes_order, data_order, fill=TRUE)

}

